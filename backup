#!/bin/bash
clear
red() { echo -e "\\033[32;1m${*}\\033[0m"; }
GREEN="\e[92;1m"
BLUE="\033[36m"
BIWhite='\033[1;97m'
RED='\033[0;31m'
NC='\033[0m'
IP=$(curl -s icanhazip.com)
HOST="$(cat /etc/xray/domain)"
DATEVPS=$(date +"%d-%B-%Y")
ISPVPS=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)

function cadangkan_data_vps() {    
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Please Wait.... "
    sleep 1
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Prepare Before Backup Vps Data... "
    rm -rf /root/backup &>/dev/null
    sleep 1
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Directory Created... "
    mkdir -p /root/backup &>/dev/null
    sleep 1
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª VPS Data Backup Start Now... "
    sleep 1
    cp /etc/passwd backup/ &>/dev/null
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Backup passwd data..."
    sleep 1
    cp /etc/group backup/ &>/dev/null
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Backup group data..."
    sleep 1
    cp /etc/shadow backup/ &>/dev/null
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Backup shadow data..."
    sleep 1
    cp /etc/gshadow backup/ &>/dev/null
    echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Backup gshadow data..."
    sleep 1
    cp /etc/crontab backup/ &>/dev/null
    cp /etc/vmess/.vmess.db backup/ &>/dev/null
    cp /etc/vless/.vless.db backup/ &>/dev/null
    cp /etc/trojan/.trojan.db backup/ &>/dev/null
    cp /etc/shadowsocks/.shadowsocks.db backup/ &>/dev/null
    cp -r /etc/limit backup/ &>/dev/null
    cp -r /etc/vmess backup/ &>/dev/null
    cp -r /etc/trojan backup/ &>/dev/null
    cp -r /etc/vless backup/ &>/dev/null
    cp -r /etc/shadowsocks backup/ &>/dev/null
    cp -r /etc/xray backup/xray &>/dev/null
    cp -r /var/www/html/ backup/html &>/dev/null
    cp -a /detail/ backup/detail &>/dev/null
    cd /root
    zip -r $IP-$DATEVPS.zip backup > /dev/null 2>&1
    rclone copy /root/$IP-$DATEVPS.zip dr:backup/
    url=$(rclone link dr:backup/$IP-$DATEVPS.zip)
    id=$(echo $url | grep '^https' | cut -d'=' -f2)
    link="https://drive.google.com/u/4/uc?id=${id}&export=download"
    rm -rf backup
    rm -rf $IP-$DATEVPS.zip

    echo -e "-------------------------------------"
    echo -e "SUCCESSFULL BACKUP YOUR VPS"
    echo -e "Please Save The Following Data"
    echo -e "-------------------------------------"
    echo -e "Your VPS IP : $IP"
    echo -e "DOMAIN      : $HOST"
    echo -e "DATE        : $DATEVPS"
    echo -e "ISP         : $ISPVPS"
    echo -e "LOCATION    : $CITY"
    echo -e "LINK BACKUP : $link"
    echo -e "-------------------------------------"
    echo -e "Please Check your backup link"
    
    kirim_link "$link"
    read -n 1 -s -r -p "Press [ Enter ] to back on menu"
    m-backup
}


function kirim_link() {
    local backup_link="$1"

    # Load token dan chat id dari file jika belum ada
    if [[ -z "$getToken" || -z "$adminID" ]]; then
        getToken=$(sed -n 1p /root/.bckupbot)
        adminID=$(sed -n 2p /root/.bckupbot)
    fi

    local CHATID="$adminID"
    local KEY="$getToken"
    local TIME="10"
    local URL="https://api.telegram.org/bot$KEY/sendMessage"

    local TEXT="
<b>==============================</b>
<b>‚úÖ BACKUP VPS</b>
<b>==============================</b>
<b>üìÜ Date     :</b> <code>$DATEVPS</code>
<b>üåê IP       :</b> <code>$IP</code>
<b>üåç Domain   :</b> <code>$HOST</code>
<b>üè¢ ISP      :</b> <code>$ISPVPS</code>
<b>üìç City     :</b> <code>$CITY</code>
<b>üì¶ Backup Link :</b><a href=\"$backup_link\">Download Here</a>
<b>==============================</b>
"

    response=$(curl -s --max-time $TIME -d "chat_id=$CHATID" \
        -d "disable_web_page_preview=1" \
        -d "parse_mode=html" \
        --data-urlencode "text=$TEXT" \
        "$URL")


        echo -e "[ ${BIWhite}INFO${NC} ] ¬ª Backup link berhasil dikirim ke Telegram."
        
}


[[ ! -f /root/.bckupbot ]] && {
    echo "Please Input Bot Details First"
    sleep 2
    clear
    read -p "Bot Token : " getToken
    read -p "Admin ID  : " adminID
    echo "$getToken" >/root/.bckupbot
    echo "$adminID" >>/root/.bckupbot
    echo "switch off" >>/root/.bckupbot
}
read -t 10 -p "Backup y/n?  " directBckp
if [ "${directBckp}" == "n" ]; then
    m-backup
else
    cadangkan_data_vps
fi