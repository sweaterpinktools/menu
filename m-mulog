#!/bin/bash
clear
PERMISSION() {
    MYIP=$(curl -sS ipv4.icanhazip.com)

    TODAY_DATE=$(date +'%Y-%m-%d')

    AUTHORIZED_ENTRY=$(curl -sS https://raw.githubusercontent.com/sweaterpinktools/os/main/ip | grep -w "$MYIP" | head -1)

    if [[ -n "$AUTHORIZED_ENTRY" ]]; then
        # IP_FROM_ENTRY sekarang adalah field ke-4
        IP_FROM_ENTRY=$(echo "$AUTHORIZED_ENTRY" | awk '{print $4}')
        # EXP_DATE_OR_LIFETIME_STATUS sekarang adalah field ke-3
        EXP_DATE_OR_LIFETIME_STATUS=$(echo "$AUTHORIZED_ENTRY" | awk '{print $3}') 

        if [ "$MYIP" = "$IP_FROM_ENTRY" ]; then
            # Cek apakah statusnya 'lifetime'
            if [[ "$EXP_DATE_OR_LIFETIME_STATUS" == "lifetime" ]]; then
                echo -e "\033[1;92mPermission Accepted (Lifetime User)\033[0m"
                echo -e "\033[1;97mAkses Di Izinkan (Pengguna Lifetime)${NC}"
            # Jika bukan 'lifetime', baru lakukan perbandingan tanggal
            elif [[ "$TODAY_DATE" < "$EXP_DATE_OR_LIFETIME_STATUS" ]]; then
                echo -e "\033[1;92mPermission Accepted\033[0m"
                echo -e "\033[1;97mAkses Di Izinkan${NC}"
            elif [[ "$TODAY_DATE" == "$EXP_DATE_OR_LIFETIME_STATUS" ]]; then
                echo -e "\033[1;93mPermission Accepted (Today is Expiry Date)\033[0m"
                echo -e "\033[1;97mAkses Di Izinkan (Hari Ini Kadaluarsa)${NC}"
            else
                echo -e "\033[1;91mPermission Denied (Expired)\033[0m"
                echo -e "\033[1;97mAkses Di Tolak (Kadaluarsa)${NC}"
                read -n 1 -s -r -p "Press [ Enter ] to Exit"
                exit 1
            fi
        else
            echo -e "\033[1;91mPermission Denied (IP Mismatch)\033[0m"
            echo -e "\033[1;97mAkses Di Tolak (IP Tidak Cocok)${NC}"
            read -n 1 -s -r -p "Press [ Enter ] to Exit"
            exit 1
        fi
    else
        echo -e "\033[1;91mPermission Denied (IP Not Found)\033[0m"
        echo -e "\033[1;97mAkses Di Tolak (IP Tidak Ditemukan)${NC}"
        read -n 1 -s -r -p "Press [ Enter ] to Exit"
        exit 1
    fi
}

#PERMISSION
clear
y='\033[1;33m'
BGX="\033[42m"
CYAN="\033[96m"
Putih="\033[97m"
RED='\033[0;31m'
NC='\033[0m'
green='\033[0;32m'
BIBlack='\033[1;90m'
BIGreen='\033[1;92m'
BIYellow='\033[1;93m'
BIBlue='\033[1;94m'
BIPurple='\033[1;95m'
BICyan='\033[1;96m'
BIWhite='\033[1;97m'
UWhite='\033[4;37m'
On_IPurple='\033[0;105m'
On_IRed='\033[0;101m'
IBlack='\033[0;90m'
IGreen='\033[0;92m'
IYellow='\033[0;93m'
IBlue='\033[0;94m'
IPurple='\033[0;95m'
ICyan='\033[0;96m'
IWhite='\033[0;97m'
GREENBO='\033[1;32m'
bgwhite='\e[40;97;1m'
bgred='\e[41;97;1m'
bggreen='\e[42;97;1m'
bgyellow='\e[43;97;1m'
bgmagenta='\e[45;97;1m'
bgblue='\e[46;97;1m'
bgblack='\e[47;30;1m'
w='\033[97m'
ORANGE='\033[0;34m'

function manage_systemd_limit_service() {
    local LIMIT_IP_SERVICES=(
        "limiter-vm"
        "limiter-vl"
        "limiter-trj"
        "limiter-shd"
        "limiter-ssh"
    )
    local LIMIT_QUOTA_SERVICES=(
        "limitvmess"
        "limitvless"
        "limittrojan"
        "limitshadowsocks"
    )

    get_status_group() {
        local services=("${@}")
        local all_on=true
        for svc in "${services[@]}"; do
            if ! systemctl is-enabled --quiet "${svc}.timer" || ! systemctl is-active --quiet "${svc}.timer"; then
                all_on=false
                break
            fi
        done
        if "$all_on"; then
            echo -e "${GREEN}ON ${NC}"
        else
            echo -e "${RED}OFF ${NC}"
        fi
    }

    enable_services() {
        for svc in "${@}"; do
            echo "Mengaktifkan ${svc}.timer..."
            if systemctl enable --now --quiet "${svc}.timer"; then
                echo -e "${GREEN}${svc}.timer berhasil diaktifkan${NC}"
            else
                echo -e "${RED}Gagal mengaktifkan ${svc}.timer${NC}"
            fi
        done
    }

    disable_services() {
        for svc in "${@}"; do
            echo "Menonaktifkan ${svc}.timer..."
            if systemctl disable --now --quiet "${svc}.timer"; then
                echo -e "${GREEN}${svc}.timer berhasil dimatikan${NC}"
            else
                echo -e "${RED}Gagal menonaktifkan ${svc}.timer${NC}"
            fi
        done
    }

    while true; do
        local status_cron_quota=$(get_status_group "${LIMIT_QUOTA_SERVICES[@]}")
        local status_cron_ip=$(get_status_group "${LIMIT_IP_SERVICES[@]}")

        clear
        echo -e "${BIWhite}----------------------------------------${NC}"
        echo -e "${BIYellow}    SERVICE LIMIT IP & QUOTA MANAGER  ${NC}"
        echo -e "${BIWhite}----------------------------------------${NC}"
        echo -e "${BIWhite}Status Limit:${NC}"
        echo -e "${IGreen}Limit Quota : ${NC}$status_cron_quota"
        echo -e "${IGreen}Limit IP    : ${NC}$status_cron_ip"
        echo -e "${BIWhite}----------------------------------------${NC}"
        echo -e "${YELLOW}Opsi Limit Quota:${NC}"
        echo -e "${IGreen}[${BIWhite}01${IGreen}] ${NC}${BIWhite}Aktifkan Service Limit Quota${NC}"
        echo -e "${IGreen}[${BIWhite}02${IGreen}] ${NC}${BIWhite}Nonaktifkan Service Limit Quota${NC}"
        echo -e "${BIWhite}----------------------------------------${NC}"
        echo -e "${YELLOW}Opsi Limit IP:${NC}"
        echo -e "${IGreen}[${BIWhite}03${IGreen}] ${NC}${BIWhite}Aktifkan Service Limit IP${NC}"
        echo -e "${IGreen}[${BIWhite}04${IGreen}] ${NC}${BIWhite}Nonaktifkan Service Limit IP${NC}"
        echo -e "${BIWhite}----------------------------------------${NC}"
        echo -e "${BIYellow}Input 0 or x ï¿½ Kembali ke Menu Utama${NC}"
        echo -e "${BIWhite}----------------------------------------${NC}"
        read -p "Pilih menu: " opt

        case "$opt" in
            1|01) enable_services "${LIMIT_QUOTA_SERVICES[@]}" ;;
            2|02) disable_services "${LIMIT_QUOTA_SERVICES[@]}" ;;
            3|03) enable_services "${LIMIT_IP_SERVICES[@]}" ;;
            4|04) disable_services "${LIMIT_IP_SERVICES[@]}" ;;
            0|x) clear ; menu ;;
            *) echo "anda salah tekan" ; sleep 1 ; m-mulog ;;
        esac
    done
}

manage_systemd_limit_service